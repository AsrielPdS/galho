export function any(dic, fn) {
    for (let key in dic)
        if (fn(dic[key], key))
            return true;
    return false;
}
export function first(dic, fn) {
    for (let key in dic)
        if (!fn || fn(dic[key], key))
            return dic[key];
    return void 0;
}
export function last(dic, fn) {
    let v;
    for (let key in dic)
        if (!fn || fn(dic[key], key))
            v = dic[key];
    return v;
}
export function firstKey(dic, fn) {
    for (let key in dic)
        if (!fn || fn(dic[key], key))
            return key;
    return void 0;
}
export function each(dic, forEach) {
    for (let key in dic) {
        let t = forEach(dic[key], key);
        if (t === false)
            return;
    }
    return dic;
}
export function isEmpty(obj) {
    for (let _k in obj)
        return false;
    return true;
}
/**
 * dictionary to Array
 * @param dic
 * @param fn
 */
export function toArray(dic, fn) {
    var result = [];
    for (var key in dic)
        result.push(fn(dic[key], key));
    return result;
}
/**
 * map dictionary
 * @param dic
 * @param fn
 */
export function filter(dic, fn = v => v) {
    let result = {};
    for (let key in dic)
        if (fn(dic[key], key))
            result[key] = dic[key];
    return result;
}
export function fromArray(arr, callback) {
    let result = {};
    for (let i = 0; i < arr.length; i++) {
        let value = arr[i];
        let temp = callback(value, i);
        result[temp[0]] = temp[1];
    }
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGljLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sVUFBVSxHQUFHLENBQVUsR0FBVyxFQUFFLEVBQXVDO0lBQy9FLEtBQUssSUFBSSxHQUFHLElBQUksR0FBRztRQUNqQixJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDO1lBQ25CLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUNELE1BQU0sVUFBVSxLQUFLLENBQVUsR0FBVyxFQUFFLEVBQXVDO0lBQ2pGLEtBQUssSUFBSSxHQUFHLElBQUksR0FBRztRQUNqQixJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDO1lBQzFCLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3BCLE9BQU8sS0FBSyxDQUFDLENBQUM7QUFDaEIsQ0FBQztBQUNELE1BQU0sVUFBVSxJQUFJLENBQVUsR0FBVyxFQUFFLEVBQXVDO0lBQ2hGLElBQUksQ0FBSSxDQUFDO0lBQ1QsS0FBSyxJQUFJLEdBQUcsSUFBSSxHQUFHO1FBQ2pCLElBQUksQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUM7WUFDMUIsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNqQixPQUFPLENBQUMsQ0FBQztBQUNYLENBQUM7QUFDRCxNQUFNLFVBQVUsUUFBUSxDQUFVLEdBQVcsRUFBRSxFQUF1QztJQUNwRixLQUFLLElBQUksR0FBRyxJQUFJLEdBQUc7UUFDakIsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQztZQUMxQixPQUFPLEdBQUcsQ0FBQztJQUNmLE9BQU8sS0FBSyxDQUFDLENBQUM7QUFDaEIsQ0FBQztBQUNELE1BQU0sVUFBVSxJQUFJLENBQVUsR0FBVyxFQUFFLE9BQStDO0lBQ3hGLEtBQUssSUFBSSxHQUFHLElBQUksR0FBRyxFQUFFO1FBQ25CLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLEtBQUssS0FBSztZQUNiLE9BQU87S0FDVjtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUNELE1BQU0sVUFBVSxPQUFPLENBQUMsR0FBUTtJQUM5QixLQUFLLElBQUksRUFBRSxJQUFJLEdBQUc7UUFDaEIsT0FBTyxLQUFLLENBQUM7SUFDZixPQUFPLElBQUksQ0FBQztBQUNkLENBQUM7QUFDRDs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLE9BQU8sQ0FBTyxHQUFXLEVBQUUsRUFBZ0M7SUFDekUsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ2hCLEtBQUssSUFBSSxHQUFHLElBQUksR0FBRztRQUNqQixNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNqQyxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBQ0Q7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxNQUFNLENBQUksR0FBVyxFQUFFLEtBQXFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNoRixJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFDaEIsS0FBSyxJQUFJLEdBQUcsSUFBSSxHQUFHO1FBQ2pCLElBQUksRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUM7WUFDbkIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMzQixPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBQ0QsTUFBTSxVQUFVLFNBQVMsQ0FBTyxHQUFhLEVBQUUsUUFBa0Q7SUFDL0YsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ2hCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ25DLElBQUksS0FBSyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNuQixJQUFJLElBQUksR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzlCLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDM0I7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDIn0=